<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.flc.coinmarket.dao.mysql.mapper.statistics.ConsumerProfitsTotalMapper">
  <resultMap id="BaseResultMap" type="com.flc.coinmarket.dao.mysql.model.statistics.ConsumerProfitsTotal">
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="profits_team" jdbcType="DECIMAL" property="profitsTeam" />
    <result column="profits_referee" jdbcType="DECIMAL" property="profitsReferee" />
    <result column="profits_lockrepo" jdbcType="DECIMAL" property="profitsLockrepo" />
    <result column="created_time" jdbcType="TIMESTAMP" property="createdTime" />
    <result column="consumer_id" jdbcType="INTEGER" property="consumerId" />
    <result column="account_id" jdbcType="INTEGER" property="accountId" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    id, profits_team, profits_referee, profits_lockrepo, created_time, consumer_id, account_id
  </sql>
  <select id="selectByExample" parameterType="com.flc.coinmarket.dao.mysql.model.statistics.ConsumerProfitsTotalExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from consumer_profits_total
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from consumer_profits_total
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from consumer_profits_total
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.flc.coinmarket.dao.mysql.model.statistics.ConsumerProfitsTotalExample">
    delete from consumer_profits_total
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.flc.coinmarket.dao.mysql.model.statistics.ConsumerProfitsTotal">
    insert into consumer_profits_total (id, profits_team, profits_referee, 
      profits_lockrepo, created_time, consumer_id, 
      account_id)
    values (#{id,jdbcType=INTEGER}, #{profitsTeam,jdbcType=DECIMAL}, #{profitsReferee,jdbcType=DECIMAL}, 
      #{profitsLockrepo,jdbcType=DECIMAL}, #{createdTime,jdbcType=TIMESTAMP}, #{consumerId,jdbcType=INTEGER}, 
      #{accountId,jdbcType=INTEGER})
  </insert>
  <insert id="insertSelective" parameterType="com.flc.coinmarket.dao.mysql.model.statistics.ConsumerProfitsTotal">
    insert into consumer_profits_total
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="profitsTeam != null">
        profits_team,
      </if>
      <if test="profitsReferee != null">
        profits_referee,
      </if>
      <if test="profitsLockrepo != null">
        profits_lockrepo,
      </if>
      <if test="createdTime != null">
        created_time,
      </if>
      <if test="consumerId != null">
        consumer_id,
      </if>
      <if test="accountId != null">
        account_id,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=INTEGER},
      </if>
      <if test="profitsTeam != null">
        #{profitsTeam,jdbcType=DECIMAL},
      </if>
      <if test="profitsReferee != null">
        #{profitsReferee,jdbcType=DECIMAL},
      </if>
      <if test="profitsLockrepo != null">
        #{profitsLockrepo,jdbcType=DECIMAL},
      </if>
      <if test="createdTime != null">
        #{createdTime,jdbcType=TIMESTAMP},
      </if>
      <if test="consumerId != null">
        #{consumerId,jdbcType=INTEGER},
      </if>
      <if test="accountId != null">
        #{accountId,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.flc.coinmarket.dao.mysql.model.statistics.ConsumerProfitsTotalExample" resultType="java.lang.Long">
    select count(*) from consumer_profits_total
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update consumer_profits_total
    <set>
      <if test="record.id != null">
        id = #{record.id,jdbcType=INTEGER},
      </if>
      <if test="record.profitsTeam != null">
        profits_team = #{record.profitsTeam,jdbcType=DECIMAL},
      </if>
      <if test="record.profitsReferee != null">
        profits_referee = #{record.profitsReferee,jdbcType=DECIMAL},
      </if>
      <if test="record.profitsLockrepo != null">
        profits_lockrepo = #{record.profitsLockrepo,jdbcType=DECIMAL},
      </if>
      <if test="record.createdTime != null">
        created_time = #{record.createdTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.consumerId != null">
        consumer_id = #{record.consumerId,jdbcType=INTEGER},
      </if>
      <if test="record.accountId != null">
        account_id = #{record.accountId,jdbcType=INTEGER},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update consumer_profits_total
    set id = #{record.id,jdbcType=INTEGER},
      profits_team = #{record.profitsTeam,jdbcType=DECIMAL},
      profits_referee = #{record.profitsReferee,jdbcType=DECIMAL},
      profits_lockrepo = #{record.profitsLockrepo,jdbcType=DECIMAL},
      created_time = #{record.createdTime,jdbcType=TIMESTAMP},
      consumer_id = #{record.consumerId,jdbcType=INTEGER},
      account_id = #{record.accountId,jdbcType=INTEGER}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.flc.coinmarket.dao.mysql.model.statistics.ConsumerProfitsTotal">
    update consumer_profits_total
    <set>
      <if test="profitsTeam != null">
        profits_team = #{profitsTeam,jdbcType=DECIMAL},
      </if>
      <if test="profitsReferee != null">
        profits_referee = #{profitsReferee,jdbcType=DECIMAL},
      </if>
      <if test="profitsLockrepo != null">
        profits_lockrepo = #{profitsLockrepo,jdbcType=DECIMAL},
      </if>
      <if test="createdTime != null">
        created_time = #{createdTime,jdbcType=TIMESTAMP},
      </if>
      <if test="consumerId != null">
        consumer_id = #{consumerId,jdbcType=INTEGER},
      </if>
      <if test="accountId != null">
        account_id = #{accountId,jdbcType=INTEGER},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.flc.coinmarket.dao.mysql.model.statistics.ConsumerProfitsTotal">
    update consumer_profits_total
    set profits_team = #{profitsTeam,jdbcType=DECIMAL},
      profits_referee = #{profitsReferee,jdbcType=DECIMAL},
      profits_lockrepo = #{profitsLockrepo,jdbcType=DECIMAL},
      created_time = #{createdTime,jdbcType=TIMESTAMP},
      consumer_id = #{consumerId,jdbcType=INTEGER},
      account_id = #{accountId,jdbcType=INTEGER}
    where id = #{id,jdbcType=INTEGER}
  </update>

  <select id="selectConsumerProfitsTotal"
          resultType="com.flc.coinmarket.dao.mysql.model.statistics.ConsumerProfitsTotal">
    SELECT
    id,profits_team profitsTeam,
    profits_referee profitsReferee,
    profits_lockrepo profitsLockrepo,
    consumer_id consumerId
    FROM consumer_profits_total WHERE  consumer_id= #{id}
   and date_format(created_time,'%Y-%m-%d') =
		  (select max(date_format(created_time,'%Y-%m-%d')) FROM consumer_profits_total where consumer_id = #{id})
  </select>

  <select id="selectLatest" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select * from consumer_profits_total where consumer_id = #{consumerId}
    and date_format(created_time,'%Y-%m-%d') = (select max(date_format(created_time,'%Y-%m-%d')) FROM consumer_profits_total where consumer_id = #{consumerId})
  </select>
  <insert id="batchInsert" parameterType="java.util.List">
    <selectKey resultType ="java.lang.Integer" keyProperty= "id" order= "AFTER">
      SELECT LAST_INSERT_ID()
    </selectKey >
    insert into consumer_profits_total
    (profits_team, profits_referee, profits_lockrepo, created_time, consumer_id, account_id)
    values
    <foreach collection ="list" item="item" index= "profits" separator =",">
      (#{item.profitsTeam},#{item.profitsReferee},#{item.profitsLockrepo},#{item.createdTime},#{item.consumerId},#{item.accountId})
    </foreach >
  </insert>
</mapper>