<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.flc.coinmarket.dao.mysql.mapper.consumer.ConsumerCapitalAccountMapper">
  <resultMap id="BaseResultMap" type="com.flc.coinmarket.dao.mysql.model.consumer.ConsumerCapitalAccount">
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="consumer_id" jdbcType="INTEGER" property="consumerId" />
    <result column="team_pos_code" jdbcType="VARCHAR" property="teamPosCode" />
    <result column="floating_funds" jdbcType="DECIMAL" property="floatingFunds" />
    <result column="lockrepo_funds" jdbcType="DECIMAL" property="lockrepoFunds" />
    <result column="profits_funds" jdbcType="DECIMAL" property="profitsFunds" />
    <result column="accumulated_profits" jdbcType="DECIMAL" property="accumulatedProfits" />
    <result column="profits_today" jdbcType="DECIMAL" property="profitsToday" />
    <result column="floating_address" jdbcType="VARCHAR" property="floatingAddress" />
    <result column="lockrepo_address" jdbcType="VARCHAR" property="lockrepoAddress" />
    <result column="profits_address" jdbcType="VARCHAR" property="profitsAddress" />
    <result column="release_flag" jdbcType="VARCHAR" property="releaseFlag" />
    <result column="reinvest_flag" jdbcType="VARCHAR" property="reinvestFlag" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    id, consumer_id, team_pos_code, floating_funds, lockrepo_funds, profits_funds, accumulated_profits, 
    profits_today, floating_address, lockrepo_address, profits_address, release_flag, 
    reinvest_flag
  </sql>
  <select id="selectByExample" parameterType="com.flc.coinmarket.dao.mysql.model.consumer.ConsumerCapitalAccountExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from consumer_capital_account
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from consumer_capital_account
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from consumer_capital_account
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.flc.coinmarket.dao.mysql.model.consumer.ConsumerCapitalAccountExample">
    delete from consumer_capital_account
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.flc.coinmarket.dao.mysql.model.consumer.ConsumerCapitalAccount">
    insert into consumer_capital_account (id, consumer_id, team_pos_code, 
      floating_funds, lockrepo_funds, profits_funds, 
      accumulated_profits, profits_today, floating_address, 
      lockrepo_address, profits_address, release_flag, 
      reinvest_flag)
    values (#{id,jdbcType=INTEGER}, #{consumerId,jdbcType=INTEGER}, #{teamPosCode,jdbcType=VARCHAR}, 
      #{floatingFunds,jdbcType=DECIMAL}, #{lockrepoFunds,jdbcType=DECIMAL}, #{profitsFunds,jdbcType=DECIMAL}, 
      #{accumulatedProfits,jdbcType=DECIMAL}, #{profitsToday,jdbcType=DECIMAL}, #{floatingAddress,jdbcType=VARCHAR}, 
      #{lockrepoAddress,jdbcType=VARCHAR}, #{profitsAddress,jdbcType=VARCHAR}, #{releaseFlag,jdbcType=VARCHAR}, 
      #{reinvestFlag,jdbcType=VARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="com.flc.coinmarket.dao.mysql.model.consumer.ConsumerCapitalAccount">
    <selectKey keyColumn="id" keyProperty="id" order="AFTER"
               resultType="int">
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into consumer_capital_account
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="consumerId != null">
        consumer_id,
      </if>
      <if test="teamPosCode != null">
        team_pos_code,
      </if>
      <if test="floatingFunds != null">
        floating_funds,
      </if>
      <if test="lockrepoFunds != null">
        lockrepo_funds,
      </if>
      <if test="profitsFunds != null">
        profits_funds,
      </if>
      <if test="accumulatedProfits != null">
        accumulated_profits,
      </if>
      <if test="profitsToday != null">
        profits_today,
      </if>
      <if test="floatingAddress != null">
        floating_address,
      </if>
      <if test="lockrepoAddress != null">
        lockrepo_address,
      </if>
      <if test="profitsAddress != null">
        profits_address,
      </if>
      <if test="releaseFlag != null">
        release_flag,
      </if>
      <if test="reinvestFlag != null">
        reinvest_flag,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=INTEGER},
      </if>
      <if test="consumerId != null">
        #{consumerId,jdbcType=INTEGER},
      </if>
      <if test="teamPosCode != null">
        #{teamPosCode,jdbcType=VARCHAR},
      </if>
      <if test="floatingFunds != null">
        #{floatingFunds,jdbcType=DECIMAL},
      </if>
      <if test="lockrepoFunds != null">
        #{lockrepoFunds,jdbcType=DECIMAL},
      </if>
      <if test="profitsFunds != null">
        #{profitsFunds,jdbcType=DECIMAL},
      </if>
      <if test="accumulatedProfits != null">
        #{accumulatedProfits,jdbcType=DECIMAL},
      </if>
      <if test="profitsToday != null">
        #{profitsToday,jdbcType=DECIMAL},
      </if>
      <if test="floatingAddress != null">
        #{floatingAddress,jdbcType=VARCHAR},
      </if>
      <if test="lockrepoAddress != null">
        #{lockrepoAddress,jdbcType=VARCHAR},
      </if>
      <if test="profitsAddress != null">
        #{profitsAddress,jdbcType=VARCHAR},
      </if>
      <if test="releaseFlag != null">
        #{releaseFlag,jdbcType=VARCHAR},
      </if>
      <if test="reinvestFlag != null">
        #{reinvestFlag,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.flc.coinmarket.dao.mysql.model.consumer.ConsumerCapitalAccountExample" resultType="java.lang.Long">
    select count(*) from consumer_capital_account
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update consumer_capital_account
    <set>
      <if test="record.id != null">
        id = #{record.id,jdbcType=INTEGER},
      </if>
      <if test="record.consumerId != null">
        consumer_id = #{record.consumerId,jdbcType=INTEGER},
      </if>
      <if test="record.teamPosCode != null">
        team_pos_code = #{record.teamPosCode,jdbcType=VARCHAR},
      </if>
      <if test="record.floatingFunds != null">
        floating_funds = #{record.floatingFunds,jdbcType=DECIMAL},
      </if>
      <if test="record.lockrepoFunds != null">
        lockrepo_funds = #{record.lockrepoFunds,jdbcType=DECIMAL},
      </if>
      <if test="record.profitsFunds != null">
        profits_funds = #{record.profitsFunds,jdbcType=DECIMAL},
      </if>
      <if test="record.accumulatedProfits != null">
        accumulated_profits = #{record.accumulatedProfits,jdbcType=DECIMAL},
      </if>
      <if test="record.profitsToday != null">
        profits_today = #{record.profitsToday,jdbcType=DECIMAL},
      </if>
      <if test="record.floatingAddress != null">
        floating_address = #{record.floatingAddress,jdbcType=VARCHAR},
      </if>
      <if test="record.lockrepoAddress != null">
        lockrepo_address = #{record.lockrepoAddress,jdbcType=VARCHAR},
      </if>
      <if test="record.profitsAddress != null">
        profits_address = #{record.profitsAddress,jdbcType=VARCHAR},
      </if>
      <if test="record.releaseFlag != null">
        release_flag = #{record.releaseFlag,jdbcType=VARCHAR},
      </if>
      <if test="record.reinvestFlag != null">
        reinvest_flag = #{record.reinvestFlag,jdbcType=VARCHAR},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update consumer_capital_account
    set id = #{record.id,jdbcType=INTEGER},
      consumer_id = #{record.consumerId,jdbcType=INTEGER},
      team_pos_code = #{record.teamPosCode,jdbcType=VARCHAR},
      floating_funds = #{record.floatingFunds,jdbcType=DECIMAL},
      lockrepo_funds = #{record.lockrepoFunds,jdbcType=DECIMAL},
      profits_funds = #{record.profitsFunds,jdbcType=DECIMAL},
      accumulated_profits = #{record.accumulatedProfits,jdbcType=DECIMAL},
      profits_today = #{record.profitsToday,jdbcType=DECIMAL},
      floating_address = #{record.floatingAddress,jdbcType=VARCHAR},
      lockrepo_address = #{record.lockrepoAddress,jdbcType=VARCHAR},
      profits_address = #{record.profitsAddress,jdbcType=VARCHAR},
      release_flag = #{record.releaseFlag,jdbcType=VARCHAR},
      reinvest_flag = #{record.reinvestFlag,jdbcType=VARCHAR}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.flc.coinmarket.dao.mysql.model.consumer.ConsumerCapitalAccount">
    update consumer_capital_account
    <set>
      <if test="consumerId != null">
        consumer_id = #{consumerId,jdbcType=INTEGER},
      </if>
      <if test="teamPosCode != null">
        team_pos_code = #{teamPosCode,jdbcType=VARCHAR},
      </if>
      <if test="floatingFunds != null">
        floating_funds = #{floatingFunds,jdbcType=DECIMAL},
      </if>
      <if test="lockrepoFunds != null">
        lockrepo_funds = #{lockrepoFunds,jdbcType=DECIMAL},
      </if>
      <if test="profitsFunds != null">
        profits_funds = #{profitsFunds,jdbcType=DECIMAL},
      </if>
      <if test="accumulatedProfits != null">
        accumulated_profits = #{accumulatedProfits,jdbcType=DECIMAL},
      </if>
      <if test="profitsToday != null">
        profits_today = #{profitsToday,jdbcType=DECIMAL},
      </if>
      <if test="floatingAddress != null">
        floating_address = #{floatingAddress,jdbcType=VARCHAR},
      </if>
      <if test="lockrepoAddress != null">
        lockrepo_address = #{lockrepoAddress,jdbcType=VARCHAR},
      </if>
      <if test="profitsAddress != null">
        profits_address = #{profitsAddress,jdbcType=VARCHAR},
      </if>
      <if test="releaseFlag != null">
        release_flag = #{releaseFlag,jdbcType=VARCHAR},
      </if>
      <if test="reinvestFlag != null">
        reinvest_flag = #{reinvestFlag,jdbcType=VARCHAR},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.flc.coinmarket.dao.mysql.model.consumer.ConsumerCapitalAccount">
    update consumer_capital_account
    set consumer_id = #{consumerId,jdbcType=INTEGER},
      team_pos_code = #{teamPosCode,jdbcType=VARCHAR},
      floating_funds = #{floatingFunds,jdbcType=DECIMAL},
      lockrepo_funds = #{lockrepoFunds,jdbcType=DECIMAL},
      profits_funds = #{profitsFunds,jdbcType=DECIMAL},
      accumulated_profits = #{accumulatedProfits,jdbcType=DECIMAL},
      profits_today = #{profitsToday,jdbcType=DECIMAL},
      floating_address = #{floatingAddress,jdbcType=VARCHAR},
      lockrepo_address = #{lockrepoAddress,jdbcType=VARCHAR},
      profits_address = #{profitsAddress,jdbcType=VARCHAR},
      release_flag = #{releaseFlag,jdbcType=VARCHAR},
      reinvest_flag = #{reinvestFlag,jdbcType=VARCHAR}
    where id = #{id,jdbcType=INTEGER}
  </update>
  <select id="selectRefereeTeam" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select a.* from consumer_capital_account a, consumer c
    where c.referee = #{refereeId} and a.consumer_id = c.id
  </select>

  <select id="selectRefereeTeamAccountId" parameterType="java.lang.Integer" resultType="java.lang.Integer">
    select a.ID from consumer_capital_account a, consumer c
    where c.referee = #{refereeId} and a.consumer_id = c.id
  </select>

  <select id="selectLeftTeam" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select a.* from consumer_capital_account a, consumer l, consumer c
    where a.consumer_id = l.id and instr(l.full_path, concat(c.full_path, c.left_code)) > 0 and c.id = #{consumerId}
  </select>

  <select id="selectRightTeam" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select a.* from consumer_capital_account a, consumer r, consumer c
    where a.consumer_id = r.id and instr(r.full_path, concat(c.full_path, c.right_code)) > 0 and c.id = #{consumerId}
  </select>

  <select id="selectTotalFunds" resultType="com.flc.coinmarket.dao.mysql.model.statistics.CapitalTotal">
    SELECT
    SUM(IFNULL(a.`floating_funds`,0))+SUM(IFNULL(a.`profits_funds`,0))+SUM(IFNULL(a.`lockrepo_funds`,0)) total,
    SUM(IFNULL(a.`floating_funds`,0)) floatingFunds,
    SUM(IFNULL(a.`profits_funds`,0)) profitsFunds,
    SUM(IFNULL(a.`lockrepo_funds`,0)) lockrepoFunds
    FROM consumer_capital_account a
  </select>
</mapper>